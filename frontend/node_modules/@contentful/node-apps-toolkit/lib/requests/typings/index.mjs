// src/requests/typings/function.ts
var FunctionTypeEnum = /* @__PURE__ */ ((FunctionTypeEnum2) => {
  FunctionTypeEnum2["GraphqlFieldMapping"] = "graphql.field.mapping";
  FunctionTypeEnum2["GraphqlResourceTypeMapping"] = "graphql.resourcetype.mapping";
  FunctionTypeEnum2["GraphqlQuery"] = "graphql.query";
  FunctionTypeEnum2["AppEventFilter"] = "appevent.filter";
  FunctionTypeEnum2["AppEventHandler"] = "appevent.handler";
  FunctionTypeEnum2["AppEventTransformation"] = "appevent.transformation";
  FunctionTypeEnum2["AppActionCall"] = "appaction.call";
  FunctionTypeEnum2["ResourcesSearch"] = "resources.search";
  FunctionTypeEnum2["ResourcesLookup"] = "resources.lookup";
  return FunctionTypeEnum2;
})(FunctionTypeEnum || {});

// src/requests/typings/request.ts
var ContentfulHeader = /* @__PURE__ */ ((ContentfulHeader2) => {
  ContentfulHeader2["Timestamp"] = "x-contentful-timestamp";
  ContentfulHeader2["SignedHeaders"] = "x-contentful-signed-headers";
  ContentfulHeader2["Signature"] = "x-contentful-signature";
  return ContentfulHeader2;
})(ContentfulHeader || {});
var ContentfulContextHeader = /* @__PURE__ */ ((ContentfulContextHeader2) => {
  ContentfulContextHeader2["CRN"] = "x-contentful-crn";
  ContentfulContextHeader2["SpaceId"] = "x-contentful-space-id";
  ContentfulContextHeader2["EnvironmentId"] = "x-contentful-environment-id";
  ContentfulContextHeader2["UserId"] = "x-contentful-user-id";
  ContentfulContextHeader2["AppId"] = "x-contentful-app-id";
  return ContentfulContextHeader2;
})(ContentfulContextHeader || {});

// src/requests/typings/validators.ts
import * as runtypes from "runtypes";
var MethodValidator = runtypes.Union(
  runtypes.Literal("GET"),
  runtypes.Literal("PATCH"),
  runtypes.Literal("HEAD"),
  runtypes.Literal("POST"),
  runtypes.Literal("DELETE"),
  runtypes.Literal("OPTIONS"),
  runtypes.Literal("PUT")
);
var PathValidator = runtypes.String.withConstraint((s) => s.startsWith("/"), {
  name: "CanonicalURI"
});
var SignatureValidator = runtypes.String.withConstraint((s) => s.length === 64, {
  name: "SignatureLength"
});
var CanonicalRequestValidator = runtypes.Record({
  method: MethodValidator,
  path: PathValidator
}).And(
  runtypes.Partial({
    headers: runtypes.Dictionary(runtypes.String, "string"),
    body: runtypes.String
  })
);
var SecretValidator = runtypes.String.withConstraint((s) => s.length === 64, {
  name: "SecretLength"
});
var TimestampValidator = runtypes.Number.withConstraint((n) => n > 15778368e5, {
  name: "TimestampAge"
});
var SignedHeadersValidator = runtypes.Array(runtypes.String).withConstraint((l) => l.length >= 2, { name: "MissingTimestampOrSignedHeaders" });
var RequestMetadataValidator = runtypes.Record({
  signature: SignatureValidator,
  timestamp: TimestampValidator,
  signedHeaders: SignedHeadersValidator
});
var TimeToLiveValidator = runtypes.Number.withConstraint((n) => n >= 0, {
  name: "PositiveNumber"
});
export {
  CanonicalRequestValidator,
  ContentfulContextHeader,
  ContentfulHeader,
  FunctionTypeEnum,
  RequestMetadataValidator,
  SecretValidator,
  TimeToLiveValidator,
  TimestampValidator
};
//# sourceMappingURL=index.mjs.map