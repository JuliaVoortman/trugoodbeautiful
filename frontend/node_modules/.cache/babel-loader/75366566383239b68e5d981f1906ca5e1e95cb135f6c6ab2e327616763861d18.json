{"ast":null,"code":"import copy from 'fast-copy';\nimport asyncToken from './async-token.js';\nimport rateLimitRetry from './rate-limit.js';\nimport rateLimitThrottle from './rate-limit-throttle.js';\nimport createDefaultOptions from './create-default-options.js';\nfunction copyHttpClientParams(options) {\n  const copiedOptions = copy(options);\n  // httpAgent and httpsAgent cannot be copied because they can contain private fields\n  copiedOptions.httpAgent = options.httpAgent;\n  copiedOptions.httpsAgent = options.httpsAgent;\n  return copiedOptions;\n}\n/**\n * Create pre-configured axios instance\n * @private\n * @param {AxiosStatic} axios - Axios library\n * @param {CreateHttpClientParams} options - Initialization parameters for the HTTP client\n * @return {AxiosInstance} Initialized axios instance\n */\nexport default function createHttpClient(axios, options) {\n  const axiosOptions = createDefaultOptions(options);\n  const instance = axios.create(axiosOptions);\n  instance.httpClientParams = options;\n  /**\n   * Creates a new axios instance with the same default base parameters as the\n   * current one, and with any overrides passed to the newParams object\n   * This is useful as the SDKs use dependency injection to get the axios library\n   * and the version of the library comes from different places depending\n   * on whether it's a browser build or a node.js build.\n   * @private\n   * @param {CreateHttpClientParams} newParams - Initialization parameters for the HTTP client\n   * @return {AxiosInstance} Initialized axios instance\n   */\n  instance.cloneWithNewParams = function (newParams) {\n    return createHttpClient(axios, {\n      ...copyHttpClientParams(options),\n      ...newParams\n    });\n  };\n  /**\n   * Apply interceptors.\n   * Please note that the order of interceptors is important\n   */\n  if (options.onBeforeRequest) {\n    instance.interceptors.request.use(options.onBeforeRequest);\n  }\n  if (typeof options.accessToken === 'function') {\n    asyncToken(instance, options.accessToken);\n  }\n  if (options.throttle) {\n    rateLimitThrottle(instance, options.throttle);\n  }\n  rateLimitRetry(instance, options.retryLimit);\n  if (options.onError) {\n    instance.interceptors.response.use(response => response, options.onError);\n  }\n  return instance;\n}","map":{"version":3,"names":["copy","asyncToken","rateLimitRetry","rateLimitThrottle","createDefaultOptions","copyHttpClientParams","options","copiedOptions","httpAgent","httpsAgent","createHttpClient","axios","axiosOptions","instance","create","httpClientParams","cloneWithNewParams","newParams","onBeforeRequest","interceptors","request","use","accessToken","throttle","retryLimit","onError","response"],"sources":["/Users/julia.voortman/Documents/trugoodbeautiful/frontend/node_modules/contentful-sdk-core/dist/create-http-client.js"],"sourcesContent":["import copy from 'fast-copy';\nimport asyncToken from './async-token.js';\nimport rateLimitRetry from './rate-limit.js';\nimport rateLimitThrottle from './rate-limit-throttle.js';\nimport createDefaultOptions from './create-default-options.js';\nfunction copyHttpClientParams(options) {\n    const copiedOptions = copy(options);\n    // httpAgent and httpsAgent cannot be copied because they can contain private fields\n    copiedOptions.httpAgent = options.httpAgent;\n    copiedOptions.httpsAgent = options.httpsAgent;\n    return copiedOptions;\n}\n/**\n * Create pre-configured axios instance\n * @private\n * @param {AxiosStatic} axios - Axios library\n * @param {CreateHttpClientParams} options - Initialization parameters for the HTTP client\n * @return {AxiosInstance} Initialized axios instance\n */\nexport default function createHttpClient(axios, options) {\n    const axiosOptions = createDefaultOptions(options);\n    const instance = axios.create(axiosOptions);\n    instance.httpClientParams = options;\n    /**\n     * Creates a new axios instance with the same default base parameters as the\n     * current one, and with any overrides passed to the newParams object\n     * This is useful as the SDKs use dependency injection to get the axios library\n     * and the version of the library comes from different places depending\n     * on whether it's a browser build or a node.js build.\n     * @private\n     * @param {CreateHttpClientParams} newParams - Initialization parameters for the HTTP client\n     * @return {AxiosInstance} Initialized axios instance\n     */\n    instance.cloneWithNewParams = function (newParams) {\n        return createHttpClient(axios, {\n            ...copyHttpClientParams(options),\n            ...newParams,\n        });\n    };\n    /**\n     * Apply interceptors.\n     * Please note that the order of interceptors is important\n     */\n    if (options.onBeforeRequest) {\n        instance.interceptors.request.use(options.onBeforeRequest);\n    }\n    if (typeof options.accessToken === 'function') {\n        asyncToken(instance, options.accessToken);\n    }\n    if (options.throttle) {\n        rateLimitThrottle(instance, options.throttle);\n    }\n    rateLimitRetry(instance, options.retryLimit);\n    if (options.onError) {\n        instance.interceptors.response.use((response) => response, options.onError);\n    }\n    return instance;\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,OAAOC,oBAAoB,MAAM,6BAA6B;AAC9D,SAASC,oBAAoBA,CAACC,OAAO,EAAE;EACnC,MAAMC,aAAa,GAAGP,IAAI,CAACM,OAAO,CAAC;EACnC;EACAC,aAAa,CAACC,SAAS,GAAGF,OAAO,CAACE,SAAS;EAC3CD,aAAa,CAACE,UAAU,GAAGH,OAAO,CAACG,UAAU;EAC7C,OAAOF,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASG,gBAAgBA,CAACC,KAAK,EAAEL,OAAO,EAAE;EACrD,MAAMM,YAAY,GAAGR,oBAAoB,CAACE,OAAO,CAAC;EAClD,MAAMO,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACF,YAAY,CAAC;EAC3CC,QAAQ,CAACE,gBAAgB,GAAGT,OAAO;EACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIO,QAAQ,CAACG,kBAAkB,GAAG,UAAUC,SAAS,EAAE;IAC/C,OAAOP,gBAAgB,CAACC,KAAK,EAAE;MAC3B,GAAGN,oBAAoB,CAACC,OAAO,CAAC;MAChC,GAAGW;IACP,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;EACI,IAAIX,OAAO,CAACY,eAAe,EAAE;IACzBL,QAAQ,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAACf,OAAO,CAACY,eAAe,CAAC;EAC9D;EACA,IAAI,OAAOZ,OAAO,CAACgB,WAAW,KAAK,UAAU,EAAE;IAC3CrB,UAAU,CAACY,QAAQ,EAAEP,OAAO,CAACgB,WAAW,CAAC;EAC7C;EACA,IAAIhB,OAAO,CAACiB,QAAQ,EAAE;IAClBpB,iBAAiB,CAACU,QAAQ,EAAEP,OAAO,CAACiB,QAAQ,CAAC;EACjD;EACArB,cAAc,CAACW,QAAQ,EAAEP,OAAO,CAACkB,UAAU,CAAC;EAC5C,IAAIlB,OAAO,CAACmB,OAAO,EAAE;IACjBZ,QAAQ,CAACM,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAEK,QAAQ,IAAKA,QAAQ,EAAEpB,OAAO,CAACmB,OAAO,CAAC;EAC/E;EACA,OAAOZ,QAAQ;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}