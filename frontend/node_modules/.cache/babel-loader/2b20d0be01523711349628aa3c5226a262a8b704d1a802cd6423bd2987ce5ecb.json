{"ast":null,"code":"'use strict';\n\nvar richTextTypes = require('@contentful/rich-text-types');\nvar escape = require('escape-html');\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar _a, _b;\nvar attributeValue = function (value) {\n  return \"\\\"\".concat(value.replace(/\"/g, '&quot;'), \"\\\"\");\n};\nvar defaultNodeRenderers = (_a = {}, _a[richTextTypes.BLOCKS.PARAGRAPH] = function (node, next) {\n  return \"<p>\".concat(next(node.content), \"</p>\");\n}, _a[richTextTypes.BLOCKS.HEADING_1] = function (node, next) {\n  return \"<h1>\".concat(next(node.content), \"</h1>\");\n}, _a[richTextTypes.BLOCKS.HEADING_2] = function (node, next) {\n  return \"<h2>\".concat(next(node.content), \"</h2>\");\n}, _a[richTextTypes.BLOCKS.HEADING_3] = function (node, next) {\n  return \"<h3>\".concat(next(node.content), \"</h3>\");\n}, _a[richTextTypes.BLOCKS.HEADING_4] = function (node, next) {\n  return \"<h4>\".concat(next(node.content), \"</h4>\");\n}, _a[richTextTypes.BLOCKS.HEADING_5] = function (node, next) {\n  return \"<h5>\".concat(next(node.content), \"</h5>\");\n}, _a[richTextTypes.BLOCKS.HEADING_6] = function (node, next) {\n  return \"<h6>\".concat(next(node.content), \"</h6>\");\n}, _a[richTextTypes.BLOCKS.EMBEDDED_ENTRY] = function (node, next) {\n  return \"<div>\".concat(next(node.content), \"</div>\");\n}, _a[richTextTypes.BLOCKS.EMBEDDED_RESOURCE] = function (node, next) {\n  return \"<div>\".concat(next(node.content), \"</div>\");\n}, _a[richTextTypes.BLOCKS.UL_LIST] = function (node, next) {\n  return \"<ul>\".concat(next(node.content), \"</ul>\");\n}, _a[richTextTypes.BLOCKS.OL_LIST] = function (node, next) {\n  return \"<ol>\".concat(next(node.content), \"</ol>\");\n}, _a[richTextTypes.BLOCKS.LIST_ITEM] = function (node, next) {\n  return \"<li>\".concat(next(node.content), \"</li>\");\n}, _a[richTextTypes.BLOCKS.QUOTE] = function (node, next) {\n  return \"<blockquote>\".concat(next(node.content), \"</blockquote>\");\n}, _a[richTextTypes.BLOCKS.HR] = function () {\n  return '<hr/>';\n}, _a[richTextTypes.BLOCKS.TABLE] = function (node, next) {\n  return \"<table>\".concat(next(node.content), \"</table>\");\n}, _a[richTextTypes.BLOCKS.TABLE_ROW] = function (node, next) {\n  return \"<tr>\".concat(next(node.content), \"</tr>\");\n}, _a[richTextTypes.BLOCKS.TABLE_HEADER_CELL] = function (node, next) {\n  return \"<th>\".concat(next(node.content), \"</th>\");\n}, _a[richTextTypes.BLOCKS.TABLE_CELL] = function (node, next) {\n  return \"<td>\".concat(next(node.content), \"</td>\");\n}, _a[richTextTypes.INLINES.ASSET_HYPERLINK] = function (node) {\n  return defaultInline(richTextTypes.INLINES.ASSET_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.ENTRY_HYPERLINK] = function (node) {\n  return defaultInline(richTextTypes.INLINES.ENTRY_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.RESOURCE_HYPERLINK] = function (node) {\n  return defaultInlineResource(richTextTypes.INLINES.RESOURCE_HYPERLINK, node);\n}, _a[richTextTypes.INLINES.EMBEDDED_ENTRY] = function (node) {\n  return defaultInline(richTextTypes.INLINES.EMBEDDED_ENTRY, node);\n}, _a[richTextTypes.INLINES.EMBEDDED_RESOURCE] = function (node) {\n  return defaultInlineResource(richTextTypes.INLINES.EMBEDDED_RESOURCE, node);\n}, _a[richTextTypes.INLINES.HYPERLINK] = function (node, next) {\n  var href = typeof node.data.uri === 'string' ? node.data.uri : '';\n  return \"<a href=\".concat(attributeValue(href), \">\").concat(next(node.content), \"</a>\");\n}, _a);\nvar defaultMarkRenderers = (_b = {}, _b[richTextTypes.MARKS.BOLD] = function (text) {\n  return \"<b>\".concat(text, \"</b>\");\n}, _b[richTextTypes.MARKS.ITALIC] = function (text) {\n  return \"<i>\".concat(text, \"</i>\");\n}, _b[richTextTypes.MARKS.UNDERLINE] = function (text) {\n  return \"<u>\".concat(text, \"</u>\");\n}, _b[richTextTypes.MARKS.CODE] = function (text) {\n  return \"<code>\".concat(text, \"</code>\");\n}, _b[richTextTypes.MARKS.SUPERSCRIPT] = function (text) {\n  return \"<sup>\".concat(text, \"</sup>\");\n}, _b[richTextTypes.MARKS.SUBSCRIPT] = function (text) {\n  return \"<sub>\".concat(text, \"</sub>\");\n}, _b[richTextTypes.MARKS.STRIKETHROUGH] = function (text) {\n  return \"<s>\".concat(text, \"</s>\");\n}, _b);\nvar defaultInline = function (type, node) {\n  return \"<span>type: \".concat(escape(type), \" id: \").concat(escape(node.data.target.sys.id), \"</span>\");\n};\nvar defaultInlineResource = function (type, node) {\n  return \"<span>type: \".concat(escape(type), \" urn: \").concat(escape(node.data.target.sys.urn), \"</span>\");\n};\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nfunction documentToHtmlString(richTextDocument, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!richTextDocument || !richTextDocument.content) {\n    return '';\n  }\n  return nodeListToHtmlString(richTextDocument.content, {\n    renderNode: __assign(__assign({}, defaultNodeRenderers), options.renderNode),\n    renderMark: __assign(__assign({}, defaultMarkRenderers), options.renderMark),\n    preserveWhitespace: options.preserveWhitespace\n  });\n}\nfunction nodeListToHtmlString(nodes, _a) {\n  var renderNode = _a.renderNode,\n    renderMark = _a.renderMark,\n    preserveWhitespace = _a.preserveWhitespace;\n  return nodes.map(function (node) {\n    return nodeToHtmlString(node, {\n      renderNode: renderNode,\n      renderMark: renderMark,\n      preserveWhitespace: preserveWhitespace\n    });\n  }).join('');\n}\nfunction nodeToHtmlString(node, _a) {\n  var renderNode = _a.renderNode,\n    renderMark = _a.renderMark,\n    preserveWhitespace = _a.preserveWhitespace;\n  if (richTextTypes.helpers.isText(node)) {\n    var nodeValue = escape(node.value);\n    // If preserveWhitespace is true, handle line breaks and spaces.\n    if (preserveWhitespace) {\n      nodeValue = nodeValue.replace(/\\n/g, '<br/>').replace(/ {2,}/g, function (match) {\n        return '&nbsp;'.repeat(match.length);\n      });\n    }\n    if (node.marks.length > 0) {\n      return node.marks.reduce(function (value, mark) {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, nodeValue);\n    }\n    return nodeValue;\n  } else {\n    var nextNode = function (nodes) {\n      return nodeListToHtmlString(nodes, {\n        renderMark: renderMark,\n        renderNode: renderNode,\n        preserveWhitespace: preserveWhitespace\n      });\n    };\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\nexports.documentToHtmlString = documentToHtmlString;","map":{"version":3,"names":["attributeValue","value","concat","replace","defaultNodeRenderers","_a","richTextTypes","BLOCKS","PARAGRAPH","node","next","content","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","EMBEDDED_ENTRY","EMBEDDED_RESOURCE","UL_LIST","OL_LIST","LIST_ITEM","QUOTE","HR","TABLE","TABLE_ROW","TABLE_HEADER_CELL","TABLE_CELL","INLINES","ASSET_HYPERLINK","defaultInline","ENTRY_HYPERLINK","RESOURCE_HYPERLINK","defaultInlineResource","HYPERLINK","href","data","uri","defaultMarkRenderers","_b","MARKS","BOLD","text","ITALIC","UNDERLINE","CODE","SUPERSCRIPT","SUBSCRIPT","STRIKETHROUGH","type","escape","target","sys","id","urn","documentToHtmlString","richTextDocument","options","nodeListToHtmlString","renderNode","__assign","renderMark","preserveWhitespace","nodes","map","nodeToHtmlString","join","helpers","isText","nodeValue","match","repeat","length","marks","reduce","mark","nextNode","nodeType"],"sources":["/Users/julia.voortman/Documents/trugoodbeautiful/frontend/node_modules/@contentful/rich-text-html-renderer/src/index.ts"],"sourcesContent":["import {\n  BLOCKS,\n  Block,\n  Document,\n  INLINES,\n  Inline,\n  MARKS,\n  Mark,\n  Text,\n  helpers,\n} from '@contentful/rich-text-types';\nimport escape from 'escape-html';\n\nconst attributeValue = (value: string) => `\"${value.replace(/\"/g, '&quot;')}\"`;\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, next) => `<p>${next(node.content)}</p>`,\n  [BLOCKS.HEADING_1]: (node, next) => `<h1>${next(node.content)}</h1>`,\n  [BLOCKS.HEADING_2]: (node, next) => `<h2>${next(node.content)}</h2>`,\n  [BLOCKS.HEADING_3]: (node, next) => `<h3>${next(node.content)}</h3>`,\n  [BLOCKS.HEADING_4]: (node, next) => `<h4>${next(node.content)}</h4>`,\n  [BLOCKS.HEADING_5]: (node, next) => `<h5>${next(node.content)}</h5>`,\n  [BLOCKS.HEADING_6]: (node, next) => `<h6>${next(node.content)}</h6>`,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.UL_LIST]: (node, next) => `<ul>${next(node.content)}</ul>`,\n  [BLOCKS.OL_LIST]: (node, next) => `<ol>${next(node.content)}</ol>`,\n  [BLOCKS.LIST_ITEM]: (node, next) => `<li>${next(node.content)}</li>`,\n  [BLOCKS.QUOTE]: (node, next) => `<blockquote>${next(node.content)}</blockquote>`,\n  [BLOCKS.HR]: () => '<hr/>',\n  [BLOCKS.TABLE]: (node, next) => `<table>${next(node.content)}</table>`,\n  [BLOCKS.TABLE_ROW]: (node, next) => `<tr>${next(node.content)}</tr>`,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, next) => `<th>${next(node.content)}</th>`,\n  [BLOCKS.TABLE_CELL]: (node, next) => `<td>${next(node.content)}</td>`,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, next) => {\n    const href = typeof node.data.uri === 'string' ? node.data.uri : '';\n    return `<a href=${attributeValue(href)}>${next(node.content)}</a>`;\n  },\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => `<b>${text}</b>`,\n  [MARKS.ITALIC]: (text) => `<i>${text}</i>`,\n  [MARKS.UNDERLINE]: (text) => `<u>${text}</u>`,\n  [MARKS.CODE]: (text) => `<code>${text}</code>`,\n  [MARKS.SUPERSCRIPT]: (text) => `<sup>${text}</sup>`,\n  [MARKS.SUBSCRIPT]: (text) => `<sub>${text}</sub>`,\n  [MARKS.STRIKETHROUGH]: (text) => `<s>${text}</s>`,\n};\n\nconst defaultInline = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} id: ${escape(node.data.target.sys.id)}</span>`;\n\nconst defaultInlineResource = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} urn: ${escape(node.data.target.sys.urn)}</span>`;\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface Next {\n  (nodes: CommonNode[]): string;\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, next: Next): string;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: string) => string;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nexport function documentToHtmlString(\n  richTextDocument: Document,\n  options: Partial<Options> = {},\n): string {\n  if (!richTextDocument || !richTextDocument.content) {\n    return '';\n  }\n\n  return nodeListToHtmlString(richTextDocument.content, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n\nfunction nodeListToHtmlString(\n  nodes: CommonNode[],\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  return nodes\n    .map<string>((node) => nodeToHtmlString(node, { renderNode, renderMark, preserveWhitespace }))\n    .join('');\n}\n\nfunction nodeToHtmlString(\n  node: CommonNode,\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  if (helpers.isText(node)) {\n    let nodeValue = escape(node.value);\n\n    // If preserveWhitespace is true, handle line breaks and spaces.\n    if (preserveWhitespace) {\n      nodeValue = nodeValue\n        .replace(/\\n/g, '<br/>')\n        .replace(/ {2,}/g, (match) => '&nbsp;'.repeat(match.length));\n    }\n\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, nodeValue);\n    }\n\n    return nodeValue;\n  } else {\n    const nextNode: Next = (nodes) =>\n      nodeListToHtmlString(nodes, { renderMark, renderNode, preserveWhitespace });\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}