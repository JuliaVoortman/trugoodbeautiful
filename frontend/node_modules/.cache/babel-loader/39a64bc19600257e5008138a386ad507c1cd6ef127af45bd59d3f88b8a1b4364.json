{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const SentimentFilter=_ref=>{let{selectedSentiment,setSelectedSentiment}=_ref;const sentiments=[{id:'positive',label:'The good stuff',color:'bg-green-600',contentfulType:'Positive'},{id:'other',label:'All the rest',color:'bg-slate-500',contentfulTypes:['Neutral','Negative']}];const handleSentimentClick=sentimentId=>{console.log('Sentiment clicked:',sentimentId);setSelectedSentiment(sentimentId);};return/*#__PURE__*/_jsx(\"div\",{className:\"-mt-16 flex justify-center gap-4 py-4 border-b border-slate-300\",children:sentiments.map(sentiment=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSentimentClick(sentiment.id),className:`w-44 h-12 flex items-center justify-center rounded-xl \n            transition-all duration-100 font-medium cursor-pointer\n            ${selectedSentiment===sentiment.id?`${sentiment.color} text-white shadow-lg transform -translate-y-1 scale-105 border-2 border-white`:'bg-white text-slate-600 bg-stone-50 -translate-y-0.5 shadow-md hover:shadow-lg'}`,children:/*#__PURE__*/_jsx(\"span\",{className:\"block w-full text-center\",children:sentiment.label})},sentiment.id))});};export default SentimentFilter;","map":{"version":3,"names":["React","jsx","_jsx","SentimentFilter","_ref","selectedSentiment","setSelectedSentiment","sentiments","id","label","color","contentfulType","contentfulTypes","handleSentimentClick","sentimentId","console","log","className","children","map","sentiment","onClick"],"sources":["/Users/julia.voortman/Documents/trugoodbeautiful/frontend/src/components/SentimentFilter.jsx"],"sourcesContent":["import React from 'react';\n\nconst SentimentFilter = ({ selectedSentiment, setSelectedSentiment }) => {\n  const sentiments = [\n    { \n      id: 'positive',\n      label: 'The good stuff', \n      color: 'bg-green-600',\n      contentfulType: 'Positive'\n    },\n    { \n      id: 'other',\n      label: 'All the rest', \n      color: 'bg-slate-500',\n      contentfulTypes: ['Neutral', 'Negative']\n    }\n  ];\n\n  const handleSentimentClick = (sentimentId) => {\n    console.log('Sentiment clicked:', sentimentId);\n    setSelectedSentiment(sentimentId);\n  };\n\n  return (\n    <div className=\"-mt-16 flex justify-center gap-4 py-4 border-b border-slate-300\">\n      {sentiments.map((sentiment) => (\n        <button\n          key={sentiment.id}\n          onClick={() => handleSentimentClick(sentiment.id)}\n          className={`w-44 h-12 flex items-center justify-center rounded-xl \n            transition-all duration-100 font-medium cursor-pointer\n            ${selectedSentiment === sentiment.id\n              ? `${sentiment.color} text-white shadow-lg transform -translate-y-1 scale-105 border-2 border-white`\n              : 'bg-white text-slate-600 bg-stone-50 -translate-y-0.5 shadow-md hover:shadow-lg'\n            }`}\n        >\n          <span className=\"block w-full text-center\">\n            {sentiment.label}\n          </span>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default SentimentFilter;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,iBAAiB,CAAEC,oBAAqB,CAAC,CAAAF,IAAA,CAClE,KAAM,CAAAG,UAAU,CAAG,CACjB,CACEC,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,gBAAgB,CACvBC,KAAK,CAAE,cAAc,CACrBC,cAAc,CAAE,UAClB,CAAC,CACD,CACEH,EAAE,CAAE,OAAO,CACXC,KAAK,CAAE,cAAc,CACrBC,KAAK,CAAE,cAAc,CACrBE,eAAe,CAAE,CAAC,SAAS,CAAE,UAAU,CACzC,CAAC,CACF,CAED,KAAM,CAAAC,oBAAoB,CAAIC,WAAW,EAAK,CAC5CC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEF,WAAW,CAAC,CAC9CR,oBAAoB,CAACQ,WAAW,CAAC,CACnC,CAAC,CAED,mBACEZ,IAAA,QAAKe,SAAS,CAAC,iEAAiE,CAAAC,QAAA,CAC7EX,UAAU,CAACY,GAAG,CAAEC,SAAS,eACxBlB,IAAA,WAEEmB,OAAO,CAAEA,CAAA,GAAMR,oBAAoB,CAACO,SAAS,CAACZ,EAAE,CAAE,CAClDS,SAAS,CAAE;AACrB;AACA,cAAcZ,iBAAiB,GAAKe,SAAS,CAACZ,EAAE,CAChC,GAAGY,SAAS,CAACV,KAAK,gFAAgF,CAClG,gFAAgF,EACjF,CAAAQ,QAAA,cAELhB,IAAA,SAAMe,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACvCE,SAAS,CAACX,KAAK,CACZ,CAAC,EAXFW,SAAS,CAACZ,EAYT,CACT,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}