{"ast":null,"code":"var _jsxFileName = \"/Users/julia.voortman/Documents/trugoodbeautiful/frontend/src/components/map/WorldGlobe.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport Globe from \"react-globe.gl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorldGlobe({\n  articles\n}) {\n  _s();\n  const globeEl = useRef();\n  useEffect(() => {\n    const globe = globeEl.current;\n    globe.globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-night.jpg\" // Replace with a vibrant earth texture\n    );\n    globe.bumpImageUrl(\"//unpkg.com/three-globe/example/img/earth-topology.png\");\n  }, []);\n  const markers = articles.map(article => ({\n    lat: article.coordinates[1],\n    lng: article.coordinates[0],\n    size: 5,\n    color: getMarkerColor(article.sentiment)\n  }));\n  function getMarkerColor(sentiment) {\n    switch (sentiment) {\n      case \"Positive\":\n        return \"green\";\n      case \"Neutral\":\n        return \"yellow\";\n      case \"Negative\":\n        return \"red\";\n      default:\n        return \"gray\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Globe, {\n    ref: globeEl,\n    pointsData: markers,\n    pointColor: \"color\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(WorldGlobe, \"EFxWCNvYXoXG6t8JTJFN0+m3ZSM=\");\n_c = WorldGlobe;\nexport default WorldGlobe;\nvar _c;\n$RefreshReg$(_c, \"WorldGlobe\");","map":{"version":3,"names":["React","useRef","useEffect","Globe","jsxDEV","_jsxDEV","WorldGlobe","articles","_s","globeEl","globe","current","globeImageUrl","bumpImageUrl","markers","map","article","lat","coordinates","lng","size","color","getMarkerColor","sentiment","ref","pointsData","pointColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/julia.voortman/Documents/trugoodbeautiful/frontend/src/components/map/WorldGlobe.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Globe from \"react-globe.gl\";\n\nfunction WorldGlobe({ articles }) {\n  const globeEl = useRef();\n\n  useEffect(() => {\n    const globe = globeEl.current;\n    globe.globeImageUrl(\n      \"//unpkg.com/three-globe/example/img/earth-night.jpg\" // Replace with a vibrant earth texture\n    );\n    globe.bumpImageUrl(\n      \"//unpkg.com/three-globe/example/img/earth-topology.png\"\n    );\n  }, []);\n\n  const markers = articles.map((article) => ({\n    lat: article.coordinates[1],\n    lng: article.coordinates[0],\n    size: 5,\n    color: getMarkerColor(article.sentiment),\n  }));\n\n  function getMarkerColor(sentiment) {\n    switch (sentiment) {\n      case \"Positive\":\n        return \"green\";\n      case \"Neutral\":\n        return \"yellow\";\n      case \"Negative\":\n        return \"red\";\n      default:\n        return \"gray\";\n    }\n  }\n\n  return <Globe ref={globeEl} pointsData={markers} pointColor=\"color\" />;\n}\n\nexport default WorldGlobe;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGR,MAAM,CAAC,CAAC;EAExBC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGD,OAAO,CAACE,OAAO;IAC7BD,KAAK,CAACE,aAAa,CACjB,qDAAqD,CAAC;IACxD,CAAC;IACDF,KAAK,CAACG,YAAY,CAChB,wDACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGP,QAAQ,CAACQ,GAAG,CAAEC,OAAO,KAAM;IACzCC,GAAG,EAAED,OAAO,CAACE,WAAW,CAAC,CAAC,CAAC;IAC3BC,GAAG,EAAEH,OAAO,CAACE,WAAW,CAAC,CAAC,CAAC;IAC3BE,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEC,cAAc,CAACN,OAAO,CAACO,SAAS;EACzC,CAAC,CAAC,CAAC;EAEH,SAASD,cAAcA,CAACC,SAAS,EAAE;IACjC,QAAQA,SAAS;MACf,KAAK,UAAU;QACb,OAAO,OAAO;MAChB,KAAK,SAAS;QACZ,OAAO,QAAQ;MACjB,KAAK,UAAU;QACb,OAAO,KAAK;MACd;QACE,OAAO,MAAM;IACjB;EACF;EAEA,oBAAOlB,OAAA,CAACF,KAAK;IAACqB,GAAG,EAAEf,OAAQ;IAACgB,UAAU,EAAEX,OAAQ;IAACY,UAAU,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE;AAACtB,EAAA,CAlCQF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}