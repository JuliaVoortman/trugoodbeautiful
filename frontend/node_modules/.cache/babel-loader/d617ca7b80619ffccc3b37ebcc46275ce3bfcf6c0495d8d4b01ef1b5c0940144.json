{"ast":null,"code":"import{useState,useEffect}from'react';import{createClient}from'contentful';const client=createClient({space:process.env.REACT_APP_CONTENTFUL_SPACE_ID,accessToken:process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN});const useArticles=()=>{const[articles,setArticles]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchArticles=async()=>{try{const response=await client.getEntries({content_type:'article',include:2});const articleData=response.items.map(item=>({...item,coordinates:item.fields.geographicLocation?[parseFloat(item.fields.geographicLocation.split(\", \")[1]),parseFloat(item.fields.geographicLocation.split(\", \")[0])]:null}));setArticles(articleData);}catch(err){console.error('Error fetching articles:',err);setError(err.message);}finally{setLoading(false);}};fetchArticles();},[]);return{articles,loading,error};};export default useArticles;","map":{"version":3,"names":["useState","useEffect","createClient","client","space","process","env","REACT_APP_CONTENTFUL_SPACE_ID","accessToken","REACT_APP_CONTENTFUL_ACCESS_TOKEN","useArticles","articles","setArticles","loading","setLoading","error","setError","fetchArticles","response","getEntries","content_type","include","articleData","items","map","item","coordinates","fields","geographicLocation","parseFloat","split","err","console","message"],"sources":["/Users/julia.voortman/Documents/trugoodbeautiful/frontend/src/hooks/useArticles.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { createClient } from 'contentful';\n\nconst client = createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nconst useArticles = () => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchArticles = async () => {\n      try {\n        const response = await client.getEntries({\n          content_type: 'article',\n          include: 2,\n        });\n        \n        const articleData = response.items.map((item) => ({\n          ...item,\n          coordinates: item.fields.geographicLocation ? [\n            parseFloat(item.fields.geographicLocation.split(\", \")[1]),\n            parseFloat(item.fields.geographicLocation.split(\", \")[0]),\n          ] : null\n        }));\n        \n        setArticles(articleData);\n      } catch (err) {\n        console.error('Error fetching articles:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchArticles();\n  }, []);\n\n  return { articles, loading, error };\n};\n\nexport default useArticles;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,YAAY,KAAQ,YAAY,CAEzC,KAAM,CAAAC,MAAM,CAAGD,YAAY,CAAC,CAC1BE,KAAK,CAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CAChDC,WAAW,CAAEH,OAAO,CAACC,GAAG,CAACG,iCAC3B,CAAC,CAAC,CAEF,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,MAAM,CAACgB,UAAU,CAAC,CACvCC,YAAY,CAAE,SAAS,CACvBC,OAAO,CAAE,CACX,CAAC,CAAC,CAEF,KAAM,CAAAC,WAAW,CAAGJ,QAAQ,CAACK,KAAK,CAACC,GAAG,CAAEC,IAAI,GAAM,CAChD,GAAGA,IAAI,CACPC,WAAW,CAAED,IAAI,CAACE,MAAM,CAACC,kBAAkB,CAAG,CAC5CC,UAAU,CAACJ,IAAI,CAACE,MAAM,CAACC,kBAAkB,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACzDD,UAAU,CAACJ,IAAI,CAACE,MAAM,CAACC,kBAAkB,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D,CAAG,IACN,CAAC,CAAC,CAAC,CAEHlB,WAAW,CAACU,WAAW,CAAC,CAC1B,CAAE,MAAOS,GAAG,CAAE,CACZC,OAAO,CAACjB,KAAK,CAAC,0BAA0B,CAAEgB,GAAG,CAAC,CAC9Cf,QAAQ,CAACe,GAAG,CAACE,OAAO,CAAC,CACvB,CAAC,OAAS,CACRnB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEN,QAAQ,CAAEE,OAAO,CAAEE,KAAM,CAAC,CACrC,CAAC,CAED,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}